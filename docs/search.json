[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Posts",
    "section": "",
    "text": "How to host your Quarto blog in GitHub Pages\n\n\n\n\n\n\n\n\n\n\n\n\nJan 30, 2024\n\n\nAlberto Agudo Domínguez\n\n\n\n\n\n\n  \n\n\n\n\nWelcome to this blog\n\n\n\n\n\n\n\n\n\n\n\n\nJan 28, 2024\n\n\nAlberto Agudo Domínguez\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/01-how-to-setup-your-gh-pages-blog/index.html",
    "href": "posts/01-how-to-setup-your-gh-pages-blog/index.html",
    "title": "How to host your Quarto blog in GitHub Pages",
    "section": "",
    "text": "This blog was created through Quarto. Quarto is a markdown language developed by Posit with the aim of integrating different markdown languages for scientific and resource publishing (such as blogdown for blogs or bookdown for books) together with Python, R, and Julia; that is, trying to remain language-agnostic between the main languages that support data science for content publishing. You can use Quarto to create presentations, papers, reports, books, blogs like this one, and much more.\nThere are two steps to set up your Quarto blog in GitHub Pages, the first one being the Quarto blog itself and the second one publishing to a web domain through GitHub Pages. I won’t teach here the methods for creating a blog in Quarto. For Spanish speakers, there is a great workshop by Pedro J. Pérez that guides you through the process, it is quite comprehensive (actually, it’s what I used to generate mine, so thank you Pedro!). As I didn’t use an English tutorial, I am not familiar with similar sources to that workshop in English, so I would start by the Quarto documentation. Any suggestions are welcome here to help other English-speaking students.\nHere I will teach you the second step, how to host your blog in GitHub Pages through a GitHub Actions process. There is a clear guide in the Quarto documentation for publishing your blog in different ways. However, I got a bit lost in the process, so I’ll refresh the steps I took here:\nFirst, you create a new repo in GitHub, called {username}.github.io; mine is called alberto-agudo.github.io. Then, you bring your Quarto project folder into that repo.\nMake sure you publish your latest blog posts and the current state of the blog through the following command in the terminal: quarto publish gh-pages. This creates a YAML configuration (_publish.yml) which is used by the subsequent invocations of the GitHub Action. You only need to run this once, as the following publications will come along every time you push your changes on the site to main.\nOnce you’ve completed a local publish, add a publish.yml GitHub Action to your project by creating this YAML file and saving it to .github/workflows/publish.yml in your Quarto blog folder:\non:\n  workflow_dispatch:\n  push:\n    branches: main\n\nname: Quarto Publish\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v4\n\n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n\n      - name: Render and Publish\n        uses: quarto-dev/quarto-actions/publish@v2\n        with:\n          target: main\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\nThis is a GitHub Action that will render and publish your quarto website every time you push new changes to the main branch of your Quarto project folder. You need to make sure you’ve checked the Read and write permissions box in Repository settings -&gt; Actions -&gt; Workflow permissions.\nNow, although not compulsory, I recommend that you add two lines to the .gitignore file of your Quarto project folder, as you’ll be publishing your blog through a process that doesn’t require them, and this might create large git diffs in your repo in the long-term.\n/.quarto/\n/_site/\nNow, if you haven’t done so, push your changes to the main branch of your GitHub repo.\nFinally, the last step that I forgot to take was to modify the settings for Build and Deployment of your GitHub Pages site from a certain branch. You need to configure it under repo Settings -&gt; Code and automation / Pages. Under the Branch from where the page is built, you need to specify gh-pages, which is a branch created when you run quarto publish gh-pages. You also need to specify the folder to use for the site within your Source branch, which is \\root.\n\nOnce the GitHub Action finishes running, and the Settings of Pages are synced with the gh-pages branch, your site should be up and running soon.\nThis is how I have set up my Quarto blog to run and create a site through GitHub Pages and the use of GitHub Actions. I hope it helps you to set it up too."
  },
  {
    "objectID": "posts/00-first-post/index.html",
    "href": "posts/00-first-post/index.html",
    "title": "Welcome to this blog",
    "section": "",
    "text": "Hi, this is Alberto. Welcome to my blog. I will use it as a platform to collate my notes and thoughts about different programming, statistics, and AI concepts. I intend to use it as a way to record what I learn, so that new ideas become clearer by trying to explain them and also so you can benefit from it.\nAs most of my posts will be related to code or other technical concepts, I’d like to sometimes complement the content of the blog with images of a completely unrelated topic that I find enjoyable: Sculpture. This is the Artemision Jockey, a bronze sculpture from the Hellenistic Period which can be found in the Archaeological Museum of Athens. It shows a young jockey riding a horse.\n\nI did not take this photo, but I have been lucky enough to see this work in person (and bad enough of a photographer to not use the one I took at the museum). I am humbled to think that someone was able to craft this with bronze more than two thousand years ago. I find it inspiring, and it motivates me to learn and become a craftsman like the author of this piece of art. Hence, I hope this blog helps me as well as you to, just like that horse, push forward."
  }
]